"use strict";
// Приведение типов
//---------------------------------------------------------
// Простые типы:
// Пример преобразования числа в строку: используйте метод toString() для преобразования числа a в строку b.
// Пример преобразования строки в число: используйте унарный оператор + или функции parseInt() и parseFloat() для преобразования строки c в число d.
// Сложные типы и конструкторы:
// Будьте осторожны с конструкторами, как new String(), поскольку они возвращают объект, а не примитивное значение.
// Используйте valueOf() для получения примитивного значения из объекта.
// Преобразование объектов:
// Объекты: определение интерфейса пользователя с полями name, email, login.
// Присвоение типов: используйте присваивание типа через двоеточие :, оператор as для кастинга, либо присвоение типа в скобках (осторожно с JSX в React).
// Преобразование интерфейса пользователя в админа: используйте spread оператор для добавления из одного объекта в другой необходимых свойств. Однако это может внести лишние свойства.
// Рекомендации по преобразованию объектов:
// Избегайте прямого преобразования объектов, это может привести к неожиданным сайд-эффектам из-за лишних свойств.
// Использование функций маппинга: создайте функцию, которая явно преобразует один объект в другой, выборочно копируя необходимые свойства. Это обеспечивает контроль над конечным объектом и упрощает поддержку кода.
// Важные замечания:
// Правильное преобразование типов и объектов требует внимательности к деталям и понимания целевого типа.
// Для избежания путаницы и ошибок использования непредвиденных свойств следует использовать функции маппинга для преобразования между объектами.
// Преобразование типов и объектов является фундаментальной частью работы с типами в JavaScript и TypeScript, требующей внимания к тонкостям языков.
//---------------------------------------------------------
let a_413 = 5;
let b_413 = a_413.toString();
// let e_413: string = new String(a_413); - это ощибка, так как конструкток String это объект. 
// Чтобы вытянуть из объекта примитив, нужн new String(a).valueOf();
let c_413 = 'строка';
let d_413 = parseInt(c_413);
const user_414 = {
    name: 'Вася',
    email: 'vasya@ya.ru',
    login: 'vasya'
};
const admin_414 = {
    name: user_414.name,
    role: 1
};
console.log(admin_414);
