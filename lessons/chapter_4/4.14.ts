// Type Guard

//---------------------------------------------------------


// Что такое TypeGuards?
// TypeGuards - это механизмы в TypeScript, позволяющие уточнить типы в условных блоках кода, так чтобы TypeScript понимал, какой тип данных используется. Это позволяет более безопасно работать с разными типами данных в одной области видимости.

// Пример с примитивными типами
// Допустим, у нас есть функция, которая принимает ID в виде строки или числа. С помощью typeof проверки мы можем сужать тип данных и соответствующим образом обрабатывать переменную, в зависимости от ее типа.

// Создание простого TypeGuard
// TypeGuard можно реализовать как функцию, которая возвращает булево значение в зависимости от проверки типа. Например, функция isString, проверяющая, является ли переменная строкой. Это позволяет TypeScript понять, какой тип данных передается внутри условной конструкции.

// Применение TypeGuard к объектам
// Если необходимо работать не только с простыми типами, но и с объектами, например, различать пользователей и админов, можно создать TypeGuard для проверки наличия определенных свойств у объекта. Для этого используется оператор in или сравнение определенного свойства с undefined.

// Примеры TypeGuard для объектов
// Проверка по ключу: используем in для проверки, принадлежит ли объект к определенному типу на основании наличия уникального свойства.
// Явное приведение типов: применение операции приведения типов (as) для проверки, что объект соответствует определенному интерфейсу.
// Важные моменты
// TypeGuard должен возвращать не просто boolean, а специфически уточняющий тип, иначе TypeScript не сможет правильно сузить тип данных.
// Функции TypeGuard не могут быть асинхронными, так как они должны синхронно возвращать уточненный тип.


//---------------------------------------------------------



interface User_414 {
    name: string,
    email: string,
    login: string
}

interface Admin_414 {
    name: string,
    role: number
}

const user_414: User_414 = {
    name: 'Вася',
    email: 'vasya@ya.ru',
    login: 'vasya'
}

function logId_414(id: string | number) {
    if(isString_414(id )) {
        console.log(id); // id строка
    } else {
        console.log(id); // id число
    }
}

// В целом Type Guard - это функция, которая проверяет типы на соответсвие
// и возвращает Boolean результат проверки

// Пример(примитивные):

function isString_414(x: string | number): x is string {
    return typeof x === 'string';
}

function  isAdmin_414(user: User_414 | Admin_414): user is Admin_414 {
    return 'role' in user;
}

// Альтернативная проверка - альтернативный TypeGuard

function  isAdminAlt_414(user: User_414 | Admin_414): user is Admin_414 {
    return (user as Admin_414).role !== undefined;
}



function setRoleZero_414(user: User_414 | Admin_414) {
    if(isAdmin_414(user)) {
        user.role = 0; // тут уже свойства админа
    } else {
        // тут уже пользователь Адмим
    }
}