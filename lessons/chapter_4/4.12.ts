// Null тип

//------------------------------------------------------

// Ключевые моменты:

// Основы типа null:
// В TypeScript, null это тип, отличный от других таких как number, string, и boolean.
// Присваивание типа null возможно только для значения null.
// Strict Mode и Strict Null Checking:
// В строгом режиме (strict mode), TypeScript требует более точного определения типов, включая отдельное рассмотрение null и undefined.
// Опция strictNullChecks в конфигурации TypeScript (tsconfig.json) контролирует, как обрабатываются null и undefined.
// При включении (true) null можно присваивать только переменным типа null, any или специфически указанным через union тип (type | null).
// При выключении (false) null можно присваивать переменным любого типа.
// Проверки На null:
// Использование strictNullChecks позволяет избегать ошибок времени выполнения, обеспечивая проверки на null перед обращением к собственностям объекта.
// null vs. undefined:
// null используется, когда значение явно отсутствует.
// undefined используется, когда значение не было определено.
// Рекомендуется использовать null для явного отсутствия значения и undefined для значений, которые не были установлены.
// Практическое Применение:
// В случаях, когда функции могут возвращать или объект, или null, необходимо выполнить проверку на null перед использованием возвращаемого значения. Это помогает избегать ошибок вроде попытки доступа к свойствам нулевого объекта.
// Советы:
// Всегда включайте strictNullChecks в своих TypeScript проектах для повышения безопасности типов.
// Явно используйте null для представления отсутствия значения, что дает больше контроля и предсказуемости кода по сравнению с undefined.

//------------------------------------------------------

const n_412: null = null; // тип null может быть только null или any

interface User_412 {
    name: string;
}

function getUser_412() {
    if(Math.random() > 0.5) {
        return null;
    } else {
        return {
            name: 'Вася'
        } as User_412;
    }
}

const user_412 = getUser_412();
const name_412 = user_412?.name;