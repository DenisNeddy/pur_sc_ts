// Создание классов

//----------------------------------------------------

// Создание класса
// Что такое класс? Классы в TypeScript аналогичны классам в ES6 JavaScript, C#, и Java. Используются для создания объектов.
// Как создать класс? Используем ключевое слово class. Пример: создание класса User с именем пользователя.
// Свойства класса
// Проблема инициализации: TypeScript требует инициализации свойств в классе. Ошибка возникает, если свойство не инициализировано.
// Решение: Использование конструктора для инициализации свойств. Конструктор помогает задать начальные значения свойствам класса.
// Инстанцирование класса
// Создание экземпляра класса: Используется ключевое слово new для создания объекта класса. Пример: let user = new User("Вася");
// Работа со свойствами
// Можно изменять свойства объекта после его создания. Пример: user.name = "Петя";
// Компиляция TypeScript в JavaScript
// TypeScript может компилироваться в разные версии JavaScript (ES6, ES5), в зависимости от настроек в tsconfig.json.
// Показано, как изменение настроек target влияет на генерируемый JavaScript код.
// Обход ограничений на инициализацию свойств
// Отключение строгой проверки: В tsconfig.json можно отключить строгую проверку инициализации свойств (strictPropertyInitialization), чтобы избежать ошибок.
// Использование восклицательного знака (!): Маркировка свойства восклицательным знаком указывает TypeScript, что разработчик осознанно принял решение не инициализировать свойство.

//----------------------------------------------------

class User_52 {

    name: string;
    constructor(name: string) {
        this.name = name;
    }
}

let user_52 = new User_52('Петя');

user_52.name = 'Пётр';

class Admin_52 {
    role: number;
}

const admin_52 = new Admin_52();
admin_52.role = 1;