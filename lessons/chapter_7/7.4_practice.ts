// Упражнение - Функция преобразования в строку

//------------------------------------------------------

// Как создать обобщенную функцию toString с использованием дженериков в TypeScript

// Цель упражнения: Написать универсальную обобщенную функцию toString, которая будет принимать разные типы данных и переводить их в строковое представление.

// Ключевые моменты:

// Введение в дженерики:

// Дженерики позволяют функции корректно обрабатывать данные разных типов.
// Обобщенная функция toString будет использовать тип T для приема различных данных.
// Реализация функции:

// Функция принимает параметр любого типа и возращает его строковое представление либо undefined.
// Определяем условия для различных типов данных: numbers, strings, массивы, объекты и др.
// Используем typeof и switch для обработки различных типов.
// Для объектов используем JSON.stringify() для конвертации в строку.
// Примеры использования:

// Проверка функции на разных типах данных: числа, булевы значения, массивы, объекты.
// Демонстрация автоматического определения типа через дженерики и возможности явно указывать тип.
// Примечание:

// Важность проверки входных данных для корректной работы функции и избегание ошибок.
// Примеры показывают универсальность и гибкость обобщенных функций в TypeScript.
// Заключение: С помощью дженериков можно создать универсальную функцию toString, которая будет способна обрабатывать данные различных типов и преобразовывать их в строковый формат, улучшая при этом гибкость и переиспользуемость кода.

//------------------------------------------------------
function toString<T>(data: T): string | undefined {
   
    if(Array.isArray(data)) {
        return data.join(' ');
    }

    switch (typeof data) {
        case 'string':
            return data;
        case 'number':
        case 'symbol':
        case 'bigint':
        case 'boolean':
        case 'function':
            return data.toString();
        case 'object':
            return JSON.stringify(data);
        
            default: 
                return undefined
        
    }
  
}

console.log(toString([1,2,3,4]));

